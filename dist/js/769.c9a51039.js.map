{"version":3,"file":"js/769.c9a51039.js","mappings":"uIAAA,MAAMA,EAA+B,qBAAXC,QAA0BA,OAAOD,YAAcC,OAAOD,WAAWE,KAAKD,QAChG,OACED,c,wBCCF,IAAIG,EACJ,MAAMC,EAAQ,IAAIC,WAAW,IACd,SAASC,IAEtB,IAAKH,IAEHA,EAAoC,qBAAXF,QAA0BA,OAAOE,iBAAmBF,OAAOE,gBAAgBD,KAAKD,SAEpGE,GACH,MAAM,IAAII,MAAM,4GAIpB,OAAOJ,EAAgBC,EACzB,C,OCXA,MAAMI,EAAY,GAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,MAAM,IAGzC,SAASC,EAAgBC,EAAKC,EAAS,GAG5C,OAAOP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,IAChf,CCZA,SAASC,EAAGC,EAASC,EAAKH,GACxB,GAAII,EAAOnB,aAAekB,IAAQD,EAChC,OAAOE,EAAOnB,aAGhBiB,EAAUA,GAAW,CAAC,EACtB,MAAMG,EAAOH,EAAQI,SAAWJ,EAAQX,KAAOA,KAK/C,GAHAc,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBF,EAAK,CACPH,EAASA,GAAU,EAEnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACxBS,EAAIH,EAASN,GAAKW,EAAKX,GAGzB,OAAOS,CACT,CAEA,OAAOL,EAAgBO,EACzB,CAEA,O,sZCXE,MAAME,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,IAAS,CACxBC,MAAO,GACPC,QAAS,GACTC,GAAI,OAGAC,EAAWA,MACXC,EAAAA,EAAAA,IAAOC,EAAAA,GAAU,CACbL,MAAOF,EAASE,MAChBC,QAASH,EAASG,QAClBC,IAAII,EAAAA,EAAAA,OAEPC,MAAK,KACFT,EAASE,MAAQ,GACjBF,EAASG,QAAU,GACnBL,EAAOZ,KAAK,CAACwB,KAAM,UAAU,GAC/B,E,kZC5BV,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,qSCFA,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://blog/./node_modules/uuid/dist/esm-browser/native.js","webpack://blog/./node_modules/uuid/dist/esm-browser/rng.js","webpack://blog/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://blog/./node_modules/uuid/dist/esm-browser/v4.js","webpack://blog/./src/components/AddBlog.vue","webpack://blog/./src/components/AddBlog.vue?6e08","webpack://blog/./src/views/BloteAddView.vue"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","<template>\n    <form class=\"add-blog\" @submit.prevent=\"addBlog\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" v-model=\"blogForm.title\">\n        <label for=\"content\">Content</label>\n        <textarea name=\"context\" id=\"context\" cols=\"50\" rows=\"30\" v-model=\"blogForm.content\"></textarea>\n\n        <button>Add the blote</button>\n    </form>\n</template>\n<script setup>\n  import { blogsRef } from '@/firebase';\n  import { addDoc } from 'firebase/firestore';\n  import { v4 as uuidv4 } from 'uuid';\n  import { reactive } from 'vue';\n  import { useRouter } from 'vue-router';\n\n  const router = useRouter()\n  const blogForm = reactive({\n    title: '',\n    content: '',\n    id: null\n  })\n\n  const addBlog = (() => {\n        addDoc(blogsRef, {\n            title: blogForm.title, \n            content: blogForm.content, \n            id: uuidv4()\n        })\n        .then(() => {\n            blogForm.title = \"\" \n            blogForm.content = \"\" \n            router.push({name: 'blotes'})\n        })\n    })\n\n</script>\n<style lang=\"scss\" scoped>\n    .add-blog {\n      > label {\n        display: block;\n        color: var(--light);\n        font-size: 2rem;\n      }\n      > input {\n        width: 90%;\n        padding: 0.5rem;\n        border: none;\n        border-radius: 10px;\n        background: var(--middle1);\n        color: var(--lightest);\n        font-size: 1.5rem;\n\n      }\n      > textarea {\n        width: 90%;\n        margin: 0 auto;\n        padding: 1rem;\n        display: block;\n        border: none;\n        border-radius: 10px;\n        background: var(--middle1);\n        color: var(--lightest);\n        font-size: 1.2rem;\n\n      }\n      > input:focus, > textarea:focus {\n        outline: none;\n        caret-color: var(--lightest);\n      }\n      > button {\n        width: 40%;\n        height: 3rem;\n        margin: 1rem;\n        background: var(--light);\n        color: var(--lightest);\n        font-weight: bold;\n        font-size: 2rem;\n        border: none;\n        border-radius: 10px;\n\n      }\n    }\n    \n</style>","import script from \"./AddBlog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddBlog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddBlog.vue?vue&type=style&index=0&id=6773c46f&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6773c46f\"]])\n\nexport default __exports__","import script from \"./BloteAddView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BloteAddView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BloteAddView.vue?vue&type=style&index=0&id=499dbe92&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-499dbe92\"]])\n\nexport default __exports__"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","v4","options","buf","native","rnds","random","router","useRouter","blogForm","reactive","title","content","id","addBlog","addDoc","blogsRef","uuidv4","then","name","__exports__"],"sourceRoot":""}